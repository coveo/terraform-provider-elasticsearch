sudo: required
language: go
go:
  - '1.12'
  - master
cache:
  directories:
    - $HOME/gopath/pkg/mod
env:
  # global:
  #  - ELASTICSEARCH_SNIFF=false
  #  - TF_ACC=1 
  matrix:
  #  - ES_VERSION=5.5.3 ELASTICSEARCH_URL=http://localhost:9200
  #  - ES_VERSION=6.5.1 XPACK=true ELASTICSEARCH_URL=http://localhost:9210
    - ES_VERSION=5.6.16 ES_OSS_IMAGE=elasticsearch:${ES_VERSION} ES_IMAGE=docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION} ES_COMMAND="elasticsearch -Epath.repo=/tmp"
    - ES_VERSION=6.8.0 ES_OSS_IMAGE=docker.elastic.co/elasticsearch/elasticsearch-oss:${ES_VERSION} ES_IMAGE=docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION} ES_OPENDISTRO_IMAGE=amazon/opendistro-for-elasticsearch:0.9.0
    - ES_VERSION=7.0.1 ES_OSS_IMAGE=docker.elastic.co/elasticsearch/elasticsearch-oss:${ES_VERSION} ES_IMAGE=docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}

addons:
  ssh_known_hosts: github.com
  apt:
    update: true
    packages:
    - docker-ce

before_install:
  - sudo sysctl -w vm.max_map_count=262144
  - docker-compose pull
  - docker-compose up -d
install:
  - export ELASTICSEARCH_URL=http://127.0.0.1:9200 
  - export TF_LOG=INFO
  - env GO111MODULE=on go mod vendor
script:
  - export GO111MODULE=on
  - wget --waitretry=1 --retry-connrefused -T 60 -O - $ELASTICSEARCH_URL
  # Opendistro lazily initializes it's indexes, warm it up here :|
  # https://github.com/opendistro-for-elasticsearch/alerting/issues/60
  - |
    if [ -n "$ES_OPENDISTRO_IMAGE" ]; then curl -X POST -H 'Content-type: application/json'  -d '{"name":"_warmup","type":"slack","slack":{"url": "http://www.example.com"}}' 127.0.0.1:9220/_opendistro/_alerting/destinations; fi
  - docker-compose logs
  - TF_ACC=1 go test -v -cover

stages:
  - test
  - deploy
  #- name: deploy
  #  if: branch = master

jobs:
  include:
  - stage: deploy
    name: "Deploy to Github with GoReleaser"
    before_install: skip
    script: if [ "${TRAVIS_TAG::1}" = "v" ]; then curl -sL https://git.io/goreleaser | bash; fi

